{"version":3,"sources":["script.js"],"names":["darkButton","document","getElementById","lightButton","addTransition","body","querySelector","style","transition","willChange","animateBody","transform","opacity","setTimeout","setDarkMode","classList","remove","add","localStorage","setItem","setLightMode","colorModeFromLocalStorage","getItem","colorModeFromPreferences","window","matchMedia","matches","loadAndUpdateColor","click","radioButtons","querySelectorAll","forEach","button","addEventListener","checked","event"],"mappings":"AAAA,aAWA,IAAMA,WAAaC,SAASC,eAAe,QACrCC,YAAcF,SAASC,eAAe,SAGtCE,cAAgB,WACpB,IAAMC,EAAOJ,SAASK,cAAc,QACpCD,EAAKE,MAAMC,WACT,uHACFH,EAAKE,MAAME,WAAa,oCAC1B,EAEMC,YAAc,WAClB,IAAML,EAAOJ,SAASK,cAAc,QACpCD,EAAKE,MAAMI,UAAY,cACvBN,EAAKE,MAAMK,QAAU,MACrBC,YAAW,WACTR,EAAKE,MAAMI,UAAY,WACvBN,EAAKE,MAAMK,QAAU,GACvB,GAAG,IACL,EAEME,YAAc,WAClB,IAAMT,EAAOJ,SAASK,cAAc,QACpCF,gBACAM,cACAL,EAAKU,UAAUC,OAAO,SACtBX,EAAKU,UAAUE,IAAI,QACnBC,aAAaC,QAAQ,YAAa,OACpC,EAEMC,aAAe,WACnB,IAAMf,EAAOJ,SAASK,cAAc,QACpCF,gBACAM,cACAL,EAAKU,UAAUC,OAAO,QACtBX,EAAKU,UAAUE,IAAI,SACnBC,aAAaC,QAAQ,YAAa,QACpC,EAEME,0BAA4B,WAChC,OAAOH,aAAaI,QAAQ,YAC9B,EAEMC,yBAA2B,WAC/B,OAAOC,OAAOC,WAAW,gCAAgCC,QACrD,OACA,OACN,EAEMC,mBAAqB,WAEf,UADIN,6BAA+BE,4BAC1BvB,WAAW4B,QAAUzB,YAAYyB,OACtD,EAEMC,aAAe5B,SAAS6B,iBAAiB,0BAC/CD,aAAaE,SAAQ,SAACC,GACpBA,EAAOC,iBAAiB,SAAS,WAC/BjC,WAAWkC,QAAUpB,cAAgBM,cACvC,GACF,IAEAI,OACGC,WAAW,gCACXQ,iBAAiB,UAAU,SAACE,GAC3BA,EAAMT,QAAU1B,WAAW4B,QAAUzB,YAAYyB,OACnD,IAEFD","file":"script.js","sourcesContent":["/* \r\nThe first time the page is loaded, the color mode set on the preference \r\nis used and set as 'default' in the local storage. \r\nChanging the default preferences works the same way as changing the \r\ncolor mode using the buttons, if the page is loaded.\r\nWhen the page is reloaded, whatever is the value set on the local storage\r\nhas precedence over the values in the preference. If the preference\r\nchanged after the page was visited - and the page is not loaded - \r\nthe last value saved on the local storage is loaded. \r\n*/\r\n\r\nconst darkButton = document.getElementById(\"dark\");\r\nconst lightButton = document.getElementById(\"light\");\r\n\r\n// Enhance transitions for a smoother visual experience\r\nconst addTransition = () => {\r\n  const body = document.querySelector(\"body\");\r\n  body.style.transition =\r\n    \"background-color 0.6s cubic-bezier(0.4, 0, 0.2, 1), color 0.6s cubic-bezier(0.4, 0, 0.2, 1), transform 0.4s ease-out\";\r\n  body.style.willChange = \"background-color, color, transform\";\r\n};\r\n\r\nconst animateBody = () => {\r\n  const body = document.querySelector(\"body\");\r\n  body.style.transform = \"scale(1.02)\";\r\n  body.style.opacity = \"0.9\";\r\n  setTimeout(() => {\r\n    body.style.transform = \"scale(1)\";\r\n    body.style.opacity = \"1\";\r\n  }, 300);\r\n};\r\n\r\nconst setDarkMode = () => {\r\n  const body = document.querySelector(\"body\");\r\n  addTransition();\r\n  animateBody();\r\n  body.classList.remove(\"light\");\r\n  body.classList.add(\"dark\");\r\n  localStorage.setItem(\"colorMode\", \"dark\");\r\n};\r\n\r\nconst setLightMode = () => {\r\n  const body = document.querySelector(\"body\");\r\n  addTransition();\r\n  animateBody();\r\n  body.classList.remove(\"dark\");\r\n  body.classList.add(\"light\");\r\n  localStorage.setItem(\"colorMode\", \"light\");\r\n};\r\n\r\nconst colorModeFromLocalStorage = () => {\r\n  return localStorage.getItem(\"colorMode\");\r\n};\r\n\r\nconst colorModeFromPreferences = () => {\r\n  return window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n    ? \"dark\"\r\n    : \"light\";\r\n};\r\n\r\nconst loadAndUpdateColor = () => {\r\n  const color = colorModeFromLocalStorage() || colorModeFromPreferences();\r\n  color === \"dark\" ? darkButton.click() : lightButton.click();\r\n};\r\n\r\nconst radioButtons = document.querySelectorAll(\".toggle__wrapper input\");\r\nradioButtons.forEach((button) => {\r\n  button.addEventListener(\"click\", () => {\r\n    darkButton.checked ? setDarkMode() : setLightMode();\r\n  });\r\n});\r\n\r\nwindow\r\n  .matchMedia(\"(prefers-color-scheme: dark)\")\r\n  .addEventListener(\"change\", (event) => {\r\n    event.matches ? darkButton.click() : lightButton.click();\r\n  });\r\n\r\nloadAndUpdateColor();\r\n"]}